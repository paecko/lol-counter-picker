{"version":3,"sources":["services/champions.js","components/Search.js","services/winRatesService.js","components/ChampionList.js","components/ChampionNav.js","components/CounterList.js","App.js","index.js"],"names":["axios","get","Search","searchText","setSearchText","setDisplayChampions","champions","style","borderRadius","height","width","border","backgroundColor","type","value","onChange","event","target","filteredChampions","filter","champ","name","toLowerCase","startsWith","placeholder","baseUrl","getAll","a","response","data","ChampionList","displayChampions","selectedChampions","setSelectedChampions","setCurrentWinMap","currentWinMap","updateCurrent","preventDefault","championObject","champion","extractChamp","addChamp","image","championId","length","winRatesService","newChampData","newChampWinMap","winMap","championData","championWinMap","newCurrentWinMap","i","addPercentage","WinRate","championName","oldPercentage","oldTotalPercentage","newPercentage","Games","map","item","concat","selectedChampNames","marginTop","marginLeft","Paper","id","maxHeight","maxWidth","overflow","ImageList","cols","rowHeight","paddingTop","position","ImageListItem","onSubmit","className","includes","textAlign","src","alt","onClick","bottom","left","color","fontWeight","ChampionNav","removeChamp","updatedChamps","removePercentage","row","padding","margin","CounterList","JSON","parse","stringify","selectedChampionsNames","obj","sort","firstObj","secondObj","TableContainer","paddingLeft","paddingRight","minWidth","component","Table","borderCollapse","TableHead","TableRow","TableCell","class","TableBody","index","paddingBottom","scope","float","toFixed","App","useState","setChampions","setDisplaysChampions","useEffect","championService","then","document","body","parsedSelectChamps","localStorage","getItem","parsedWinMap","console","log","loadSelectChamps","loadWinMap","setItem","clearSelectChampions","top","Button","variant","minHeight","whiteSpace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7d34dbda.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/champions'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nexport default {\n    getAll: getAll\n}","import React from 'react'\n\nconst Search = ({ searchText, setSearchText, setDisplayChampions, champions }) => {\n\n    const filterChampions = (event) => {\n        setSearchText(event.target.value)\n        if (event.target.value !== '') {\n          const filteredChampions = champions.filter(champ => champ.name.toLowerCase().startsWith(event.target.value.toLowerCase()))\n          setDisplayChampions(filteredChampions)\n        } else {\n          setDisplayChampions(champions)\n        }\n      }\n\n    return (\n        <form>\n            <input style={{borderRadius:1, height:25, width:200, border:'4px solid #06000F', backgroundColor:'#2A1355'}} \n            type='text' value={searchText} onChange={filterChampions} placeholder='Search Champions'></input>\n        </form> \n    )\n}\n\nexport default Search","import axios from 'axios'\nconst baseUrl = '/api/statistics'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response\n}\n\nconst get = async (champ) => {\n    const response = await axios.get(`${baseUrl}/${champ}`)\n    return response.data\n}\n\nexport default {\n    getAll: getAll,\n    get: get\n}","import React from 'react'\nimport Search from './Search'\nimport winRatesService from '../services/winRatesService'\nimport { Paper, ImageList, ImageListItem } from '@material-ui/core'\nimport '../css/hover.css'\nimport '../css/myClasses.css'\n\nconst ChampionList = ( {champions, displayChampions, selectedChampions, setSelectedChampions, \n  setCurrentWinMap, currentWinMap, searchText, setSearchText, setDisplayChampions} ) => {\n\n  const updateCurrent = async (event) => {\n    event.preventDefault()\n    // looking for clicked champ in all champions state\n    const championObject = champions.filter(champion => champion.name === event.target.value)\n    const extractChamp = championObject[0]\n    // create object for it\n    const addChamp = {name:extractChamp.name, image:extractChamp.image, championId:extractChamp.championId}\n    // checking it hasn't been selected before and adding it to selectedChamps if not.\n    const alreadySelected = selectedChampions.filter(champ => champ.name === addChamp.name)\n    if (alreadySelected.length === 0 && selectedChampions.length < 5) {\n      if(selectedChampions.length === 0){\n        const newChampData = await winRatesService.get(addChamp.name)\n        const newChampWinMap = newChampData[0].winMap\n        setCurrentWinMap(newChampWinMap)\n      } else if(selectedChampions.length > 0) {\n        \n        // get champion that was just added\n        const champion = addChamp\n        let championData = await winRatesService.get(champion.name)\n        let championWinMap = championData[0].winMap\n        let newCurrentWinMap = {}\n\n        for (let i = 0; i < championWinMap.length; i++) {\n          // for champion being added\n          let addPercentage = championWinMap[i].WinRate\n          let name = championWinMap[i].championName\n          // for champions already added before\n          let oldPercentage = currentWinMap[i].WinRate\n          \n          let oldTotalPercentage = oldPercentage * (selectedChampions.length)\n          let newTotalPercentage = oldTotalPercentage + addPercentage\n          let newPercentage = newTotalPercentage / (selectedChampions.length + 1)\n          newCurrentWinMap[name] = {WinRate:newPercentage, Games:championWinMap[i].Games}\n        }\n        setCurrentWinMap(currentWinMap.map(item=>({...item, WinRate: newCurrentWinMap[item.championName]['WinRate'], \n          Games: newCurrentWinMap[item.championName]['Games'] + item.Games\n          })))\n      }\n      setSelectedChampions(selectedChampions.concat(addChamp))\n    }\n  }\n\n  const selectedChampNames = selectedChampions.map(champ => champ.name)\n\n  return (\n    <div style={{marginTop:100, marginLeft:100}}>\n        <Search searchText={searchText} setSearchText={setSearchText} setDisplayChampions={setDisplayChampions} \n          champions={champions}/>\n      \n      <Paper id='style-1' style={{ maxHeight: 800, maxWidth:200, overflow: 'auto',\n        backgroundColor:'#0D0223', borderRadius: 20}}>\n      <ImageList cols={1} rowHeight={90} style={{paddingTop:10, position:'center'}}>  \n        {displayChampions.map(champion =>\n          <ImageListItem key={champion.name}>\n            <form onSubmit={updateCurrent}>\n              <div className={`hvr-grow-shadow ${selectedChampNames.includes(champion.name) ? 'opacitySelectedChamps' : ''}`} \n              style={{position:'relative', textAlign:'center', marginLeft:40 }}>\n                <input type='image' src={process.env.PUBLIC_URL + '/assets/images/' + champion.image} \n                alt={champion.name} value={champion.name} onClick={updateCurrent}\n                width='120' height='90'  />\n                <div style={{ position:'absolute', bottom:7, left:4, color:'white', backgroundColor:'#38423b',\n                    fontWeight:700}}>\n                  {champion.name} \n                </div>\n              </div>\n            </form>\n          </ImageListItem>\n        )}\n      </ImageList>\n    </Paper>\n    </div>\n    \n  )\n}\n\nexport default ChampionList","import View from 'react-flexbox'\nimport React from 'react'\nimport winRatesService from '../services/winRatesService'\n\n\nconst ChampionNav = ( {selectedChampions, setSelectedChampions, currentWinMap, setCurrentWinMap} ) => {\n\n    const removeChamp = async (event) => {\n      event.preventDefault()\n      const updatedChamps = selectedChampions.filter(champ => champ.name !== event.target.value)\n      if (selectedChampions.length === 1) {\n        setCurrentWinMap([])\n      }\n      else {\n        let championData = await winRatesService.get(event.target.value)\n        let championWinMap = championData[0].winMap\n        let newCurrentWinMap = {}\n  \n        for (let i = 0; i < championWinMap.length; i++) {\n          // for champion being added\n          let removePercentage = championWinMap[i].WinRate\n          let name = championWinMap[i].championName\n          // for champions already added before\n          let oldPercentage = currentWinMap[i].WinRate\n          \n          let oldTotalPercentage = oldPercentage * (selectedChampions.length)\n          let newTotalPercentage = oldTotalPercentage - removePercentage\n          let newPercentage = newTotalPercentage / (selectedChampions.length - 1)\n          newCurrentWinMap[name] = {WinRate: newPercentage, Games: championWinMap[i].Games}\n          \n        }\n        setCurrentWinMap(currentWinMap.map(item=>({...item, WinRate: newCurrentWinMap[item.championName]['WinRate'],\n            Games: item.Games - newCurrentWinMap[item.championName]['Games']\n          })))\n      }\n      setSelectedChampions(updatedChamps)\n    }\n  \n    return (\n      <View row style={{ padding:30 }}>\n      {selectedChampions.map(champion =>\n      <div key={champion.name}>\n        <View style={{ margin:15}}>\n            <input width='90' type=\"image\" src={process.env.PUBLIC_URL + '/assets/images/' + champion.image}\n            alt={champion.name} onClick={removeChamp} value={champion.name}\n            /> \n        </View>\n      </div>\n      )}\n    </View>\n\n    )\n\n  }\n\nexport default ChampionNav","import React from 'react'\nimport { Paper, ImageList, ImageListItem } from '@material-ui/core'\nimport '../css/hover.css'\nimport '../css/myClasses.css'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst CounterList = ( {currentWinMap, selectedChampions}) => {  \n    //let winMap = currentWinMap\n    //const championsToDisplay = []\n    let winMap = JSON.parse(JSON.stringify(currentWinMap))\n    const selectedChampionsNames = selectedChampions.map(champ => champ.name)\n    winMap = winMap.filter(obj => !selectedChampionsNames.includes(obj.championName))\n    winMap.sort((firstObj, secondObj) => secondObj.WinRate - firstObj.WinRate)\n\n    return (\n      <TableContainer style={{ width:'100%', backgroundColor:'#462D73', paddingLeft:'10%', paddingRight:'10%', overflow:'auto', \n          maxHeight:800, maxWidth:800, minWidth:500, position:'relative'}}\n        component={Paper} id='style-1'>\n        <Table style={{borderCollapse:'collapse'}}>\n          <TableHead>\n            <TableRow>\n              <TableCell class='counterListHeaderText'>Champion</TableCell>\n              <TableCell class='counterListHeaderText'>WinRate</TableCell>\n              <TableCell class='counterListHeaderText'>Games</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {winMap.map((champ, index) => (\n              <TableRow key={champ.championName}>\n                <TableCell class='counterListCellText' style={{paddingTop:0.01, paddingBottom:25, paddingLeft:30}} component=\"th\" scope=\"row\">\n                  <div style={{position:'absolute'}}>\n                    <img style={{ width:'30%', height:'20%', float:'left'}} \n                  src={process.env.PUBLIC_URL + '/assets/images/' + champ.championName + '.png'}></img>\n                    <p>{champ.championName}</p>\n                  </div>\n\n                </TableCell>\n                <TableCell class='counterListCellText' style={{textAlign:'center'}}>{champ.WinRate.toFixed(1)}</TableCell>\n                <TableCell class='counterListCellText' style={{textAlign:'center'}}>{champ.Games}</TableCell>\n\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n\n    /**\n     *       <Paper id='style-1' style={{ maxHeight: 800, maxWidth: 200, overflow: 'auto', marginTop:100, marginLeft:100, backgroundColor:'transparent'}}>\n        <ImageList cols={1} rowHeight={150}>\n          {winMap.map(champion =>\n            <div key={champion.championName}>\n              <img src={process.env.PUBLIC_URL + '/assets/images/' + champion.championName + '.png'}></img>\n            </div>\n            )}\n        </ImageList>\n      </Paper>\n     */\n  }\n\nexport default CounterList","import React, { useState, useEffect } from 'react'\nimport championService from './services/champions'\nimport { Button } from '@material-ui/core'\nimport './css/hover.css'\nimport './css/myClasses.css'\nimport ChampionList from './components/ChampionList'\nimport ChampionNav from './components/ChampionNav'\nimport CounterList from './components/CounterList'\n\n// following are from : https://riot-api-libraries.readthedocs.io/en/latest/collectingdata.html\n// users: https://canisback.com/leagueId/\n// MATCHIDS: https://canisback.com/matchId/\n//TO DO:\n// increment games too as champs are added\n// counter list fixed header\n// add sorting options to counter table\n// reduce spacing between counter list items\n// make counter list a table like the tier list on u.gg\n// sort by skill level\n// make it look nicer\n// make it mobile friendly\n// option for using player stats for counter recommandations\n// option for doing combinined counters or individual counters\n// figuring out how to work around counters for a champ at different lanes\n\n/** why does every champion have a number in front of it */\n\nconst App = () => { \n  const [champions, setChampions] = useState([])\n  const [displayChampions, setDisplaysChampions] = useState([])\n  const [searchText, setSearchText] = useState('')\n  const [selectedChampions, setSelectedChampions] = useState([])\n  const [currentWinMap, setCurrentWinMap] = useState([])\n\n  useEffect(() => {\n    championService.getAll().then(response => setChampions(response.data))\n  }, [])\n\n  useEffect(() => {\n    setDisplaysChampions(champions)\n  }, [champions])\n\n  useEffect(() => {\n    document.body.style.backgroundColor = '#18053A'\n  }, [])\n\n  useEffect(() => {\n    const parsedSelectChamps = localStorage.getItem(\"selectedChampions\")\n    const parsedWinMap = localStorage.getItem(\"currentWinMap\")\n    // since its stored as a string and when its empty, its just an empty string as []. \n    if (parsedSelectChamps !== '[]' && parsedSelectChamps) {\n      console.log('loading saved selected champs')\n      const loadSelectChamps = JSON.parse(parsedSelectChamps)\n      setSelectedChampions(loadSelectChamps)\n    }\n    if (parsedWinMap !== '[]' && parsedWinMap) {\n      console.log('loading win map')\n      const loadWinMap = JSON.parse(parsedWinMap)\n      setCurrentWinMap(loadWinMap)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"selectedChampions\", JSON.stringify(selectedChampions))\n  }, [selectedChampions])\n\n  useEffect(() => {\n    localStorage.setItem(\"currentWinMap\", JSON.stringify(currentWinMap))\n  }, [currentWinMap])\n\n  const clearSelectChampions = () => {\n    setSelectedChampions([])\n    setCurrentWinMap([])\n  }\n\n  const renderNavAndCounters = () => {\n    return (\n      <div style={{position:'absolute', left:400, top:50}}>\n        <div style={{position:'relative', left:65}}>\n          <ChampionNav selectedChampions={selectedChampions} setSelectedChampions={setSelectedChampions} \n            currentWinMap={currentWinMap} setCurrentWinMap={setCurrentWinMap}/>\n        </div>\n        <div style={{position:'absolute', left:100, top:150}}>\n          <Button variant=\"contained\" color=\"primary\" onClick={clearSelectChampions}\n              style={{maxWidth:100, minWidth:100, maxHeight:30, minHeight:30, whiteSpace:'nowrap'}}>\n              Clear All\n          </Button>\n        </div>\n\n        <div style={{position:'absolute', left:100, top:200}}>\n          {currentWinMap.length > 0 ? <CounterList currentWinMap={currentWinMap} selectedChampions={selectedChampions}/> : ''}\n        </div>\n      </div>\n    )\n  }\n  \n  const renderInstructions = () => {\n    return (\n      <div style={{position:'absolute'}}>\n        <div style={{color:'white', position:'relative', left:650, top:200, whiteSpace:'nowrap'}}>\n          Choose enemy champions from the list on the left. \n          You can also search for champions.\n        </div>\n        <div style={{color:'white', position:'relative', left:600, top:250}}>\n          <h1>About LolCounter</h1>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div style={{ float:'left', position:'relative' }}>\n      <div style={{ float:'left', paddingTop:0, paddingLeft:100}}>\n        <ChampionList champions={champions} selectedChampions={selectedChampions} setSelectedChampions={setSelectedChampions}\n          setCurrentWinMap={setCurrentWinMap} currentWinMap={currentWinMap} displayChampions={displayChampions}\n          searchText={searchText} setSearchText={setSearchText} setDisplayChampions={setDisplaysChampions}\n        />\n      </div>\n\n      {selectedChampions.length > 0 ? renderNavAndCounters() : renderInstructions()}\n    </div>\n  )\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}